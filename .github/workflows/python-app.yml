# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
    paths: ["backend-flask/**"]
  pull_request:
    branches: [ "main" ]
    paths: ["backend-flask/**"]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        cd backend-flask
        python -m pip install --upgrade pip
        pip install flake8 pytest
        
    - name: Restore Python dependencies cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

    - name: Install dependencies
      working-directory: backend-flask
      run: pip install -r requirements.txt

      # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Save Python dependencies cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

    - name: Lint with flake8
      run: |
        cd backend-flask
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        cd backend-flask
        pytest services/test.py
        
  upload-open-api-spec:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
#     - uses: readmeio/rdme@v8
#       name: validate openapi-3.0.yml
#       with:
#         rdme: openapi:validate backend-flask/openapi-3.0.yml
    - uses: readmeio/rdme@v8
      name: upload openapi-3.0.yml
      with:
        rdme: openapi --version=v1.0 --key=${{ secrets.README_API_KEY }} --id=${{ secrets.README_ID }}
    - name: Notify deploy to Rollbar
      uses: rollbar/github-deploy-action@2.1.2
      id: rollbar_deploy
      with:
        environment: 'main'
        version: ${{ github.sha }}
      env:
        ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
        ROLLBAR_USERNAME: ${{ github.actor }}
  
